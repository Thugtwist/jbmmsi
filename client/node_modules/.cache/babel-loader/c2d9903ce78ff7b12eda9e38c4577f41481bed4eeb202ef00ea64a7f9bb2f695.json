{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nexport const useApi = (url, options = {}) => {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const hasFetched = useRef(false);\n  const fetchData = async () => {\n    // Prevent duplicate calls\n    if (hasFetched.current && !options.forceRefetch) return;\n    try {\n      setLoading(true);\n      setError(null);\n      hasFetched.current = true;\n      console.log(`ðŸ“¡ Fetching: ${url}`);\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n      const result = await response.json();\n      if (result.success) {\n        setData(result.data);\n      } else {\n        throw new Error(result.message || 'Request failed');\n      }\n    } catch (err) {\n      console.error('API Error:', err);\n      setError(err.message);\n      setData(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [url]); // Only refetch if URL changes\n\n  const refetch = () => {\n    hasFetched.current = false;\n    fetchData();\n  };\n  return {\n    data,\n    loading,\n    error,\n    refetch\n  };\n};\n_s(useApi, \"zWvKuO3okgREr5hMKXfnblBp5LQ=\");","map":{"version":3,"names":["useState","useEffect","useRef","useApi","url","options","_s","data","setData","loading","setLoading","error","setError","hasFetched","fetchData","current","forceRefetch","console","log","response","fetch","ok","Error","status","statusText","result","json","success","message","err","refetch"],"sources":["C:/jbmmsi/client/src/hooks/useApi.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\n\r\nexport const useApi = (url, options = {}) => {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const hasFetched = useRef(false);\r\n\r\n  const fetchData = async () => {\r\n    // Prevent duplicate calls\r\n    if (hasFetched.current && !options.forceRefetch) return;\r\n    \r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      hasFetched.current = true;\r\n\r\n      console.log(`ðŸ“¡ Fetching: ${url}`);\r\n      const response = await fetch(url);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n      \r\n      const result = await response.json();\r\n      \r\n      if (result.success) {\r\n        setData(result.data);\r\n      } else {\r\n        throw new Error(result.message || 'Request failed');\r\n      }\r\n    } catch (err) {\r\n      console.error('API Error:', err);\r\n      setError(err.message);\r\n      setData(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [url]); // Only refetch if URL changes\r\n\r\n  const refetch = () => {\r\n    hasFetched.current = false;\r\n    fetchData();\r\n  };\r\n\r\n  return {\r\n    data,\r\n    loading,\r\n    error,\r\n    refetch\r\n  };\r\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEnD,OAAO,MAAMC,MAAM,GAAGA,CAACC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMa,UAAU,GAAGX,MAAM,CAAC,KAAK,CAAC;EAEhC,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B;IACA,IAAID,UAAU,CAACE,OAAO,IAAI,CAACV,OAAO,CAACW,YAAY,EAAE;IAEjD,IAAI;MACFN,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MACdC,UAAU,CAACE,OAAO,GAAG,IAAI;MAEzBE,OAAO,CAACC,GAAG,CAAC,gBAAgBd,GAAG,EAAE,CAAC;MAClC,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAChB,GAAG,CAAC;MAEjC,IAAI,CAACe,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,QAAQH,QAAQ,CAACI,MAAM,KAAKJ,QAAQ,CAACK,UAAU,EAAE,CAAC;MACpE;MAEA,MAAMC,MAAM,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAEpC,IAAID,MAAM,CAACE,OAAO,EAAE;QAClBnB,OAAO,CAACiB,MAAM,CAAClB,IAAI,CAAC;MACtB,CAAC,MAAM;QACL,MAAM,IAAIe,KAAK,CAACG,MAAM,CAACG,OAAO,IAAI,gBAAgB,CAAC;MACrD;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZZ,OAAO,CAACN,KAAK,CAAC,YAAY,EAAEkB,GAAG,CAAC;MAChCjB,QAAQ,CAACiB,GAAG,CAACD,OAAO,CAAC;MACrBpB,OAAO,CAAC,IAAI,CAAC;IACf,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDT,SAAS,CAAC,MAAM;IACda,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACV,GAAG,CAAC,CAAC,CAAC,CAAC;;EAEX,MAAM0B,OAAO,GAAGA,CAAA,KAAM;IACpBjB,UAAU,CAACE,OAAO,GAAG,KAAK;IAC1BD,SAAS,CAAC,CAAC;EACb,CAAC;EAED,OAAO;IACLP,IAAI;IACJE,OAAO;IACPE,KAAK;IACLmB;EACF,CAAC;AACH,CAAC;AAACxB,EAAA,CArDWH,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}