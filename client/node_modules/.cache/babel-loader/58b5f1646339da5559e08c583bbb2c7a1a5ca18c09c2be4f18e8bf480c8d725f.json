{"ast":null,"code":"var _jsxFileName = \"C:\\\\jbmmsi\\\\client\\\\src\\\\components\\\\NotificationCenter.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSocket } from '../context/SocketContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationCenter = () => {\n  _s();\n  const {\n    notifications,\n    removeNotification,\n    isConnected\n  } = useSocket();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          .notification {\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            padding: 15px 20px;\n            border-radius: 5px;\n            color: white;\n            z-index: 10000;\n            max-width: 300px;\n            box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            animation: slideIn 0.3s ease;\n            margin-bottom: 10px;\n          }\n          .notification.success { background: #4CAF50; }\n          .notification.info { background: #2196F3; }\n          .notification.warning { background: #ff9800; }\n          .notification.error { background: #f44336; }\n          .notification button {\n            background: none;\n            border: none;\n            color: white;\n            font-size: 18px;\n            cursor: pointer;\n            margin-left: 10px;\n          }\n          @keyframes slideIn {\n            from { transform: translateX(100%); opacity: 0; }\n            to { transform: translateX(0); opacity: 1; }\n          }\n          .connection-status {\n            position: fixed;\n            top: 10px;\n            left: 10px;\n            padding: 5px 10px;\n            border-radius: 15px;\n            color: white;\n            font-size: 12px;\n            z-index: 10001;\n            font-weight: bold;\n          }\n          .connection-status.connected { background: #4CAF50; }\n          .connection-status.disconnected { background: #ff9800; }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `notification ${notification.type}`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => removeNotification(notification.id),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, notification.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationCenter, \"anIhvVK7tVekxj3gun+ztAyzSA0=\", false, function () {\n  return [useSocket];\n});\n_c = NotificationCenter;\nexport default NotificationCenter;\nvar _c;\n$RefreshReg$(_c, \"NotificationCenter\");","map":{"version":3,"names":["React","useSocket","jsxDEV","_jsxDEV","NotificationCenter","_s","notifications","removeNotification","isConnected","children","fileName","_jsxFileName","lineNumber","columnNumber","map","notification","className","type","message","onClick","id","_c","$RefreshReg$"],"sources":["C:/jbmmsi/client/src/components/NotificationCenter.js"],"sourcesContent":["import React from 'react';\r\nimport { useSocket } from '../context/SocketContext.js';\r\n\r\nconst NotificationCenter = () => {\r\n  const { notifications, removeNotification, isConnected } = useSocket();\r\n\r\n  return (\r\n    <div>\r\n      <style>\r\n        {`\r\n          .notification {\r\n            position: fixed;\r\n            top: 20px;\r\n            right: 20px;\r\n            padding: 15px 20px;\r\n            border-radius: 5px;\r\n            color: white;\r\n            z-index: 10000;\r\n            max-width: 300px;\r\n            box-shadow: 0 4px 12px rgba(0,0,0,0.15);\r\n            display: flex;\r\n            justify-content: space-between;\r\n            align-items: center;\r\n            animation: slideIn 0.3s ease;\r\n            margin-bottom: 10px;\r\n          }\r\n          .notification.success { background: #4CAF50; }\r\n          .notification.info { background: #2196F3; }\r\n          .notification.warning { background: #ff9800; }\r\n          .notification.error { background: #f44336; }\r\n          .notification button {\r\n            background: none;\r\n            border: none;\r\n            color: white;\r\n            font-size: 18px;\r\n            cursor: pointer;\r\n            margin-left: 10px;\r\n          }\r\n          @keyframes slideIn {\r\n            from { transform: translateX(100%); opacity: 0; }\r\n            to { transform: translateX(0); opacity: 1; }\r\n          }\r\n          .connection-status {\r\n            position: fixed;\r\n            top: 10px;\r\n            left: 10px;\r\n            padding: 5px 10px;\r\n            border-radius: 15px;\r\n            color: white;\r\n            font-size: 12px;\r\n            z-index: 10001;\r\n            font-weight: bold;\r\n          }\r\n          .connection-status.connected { background: #4CAF50; }\r\n          .connection-status.disconnected { background: #ff9800; }\r\n        `}\r\n      </style>\r\n\r\n\r\n      {/* Notifications */}\r\n      {notifications.map(notification => (\r\n        <div\r\n          key={notification.id}\r\n          className={`notification ${notification.type}`}\r\n        >\r\n          <span>{notification.message}</span>\r\n          <button onClick={() => removeNotification(notification.id)}>\r\n            Ã—\r\n          </button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationCenter;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM;IAAEC,aAAa;IAAEC,kBAAkB;IAAEC;EAAY,CAAC,GAAGP,SAAS,CAAC,CAAC;EAEtE,oBACEE,OAAA;IAAAM,QAAA,gBACEN,OAAA;MAAAM,QAAA,EACG;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,EAIPP,aAAa,CAACQ,GAAG,CAACC,YAAY,iBAC7BZ,OAAA;MAEEa,SAAS,EAAE,gBAAgBD,YAAY,CAACE,IAAI,EAAG;MAAAR,QAAA,gBAE/CN,OAAA;QAAAM,QAAA,EAAOM,YAAY,CAACG;MAAO;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnCV,OAAA;QAAQgB,OAAO,EAAEA,CAAA,KAAMZ,kBAAkB,CAACQ,YAAY,CAACK,EAAE,CAAE;QAAAX,QAAA,EAAC;MAE5D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GANJE,YAAY,CAACK,EAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOjB,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACR,EAAA,CAtEID,kBAAkB;EAAA,QACqCH,SAAS;AAAA;AAAAoB,EAAA,GADhEjB,kBAAkB;AAwExB,eAAeA,kBAAkB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}