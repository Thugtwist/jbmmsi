{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Lorenz\\\\jbmmsi\\\\client\\\\src\\\\components\\\\Modal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = ({\n  isOpen,\n  onClose,\n  selectedProgram\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    message: ''\n  });\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Updated API endpoint - now points to your backend server\n      const response = await fetch('http://localhost:3001/api/inquiries', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...formData,\n          program: selectedProgram,\n          timestamp: new Date()\n        })\n      });\n      if (response.ok) {\n        setShowSuccess(true);\n        setShowError(false);\n        setFormData({\n          name: '',\n          email: '',\n          phone: '',\n          message: ''\n        });\n        setTimeout(() => {\n          setShowSuccess(false);\n          onClose();\n        }, 2000);\n      } else {\n        throw new Error('Failed to save inquiry');\n      }\n    } catch (error) {\n      setShowError(true);\n      setShowSuccess(false);\n      console.error('Error:', error);\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal active\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      onClick: e => e.stopPropagation(),\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Modal, \"7WZD5xoiKj5ece2POKCiB5N4yRA=\");\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Modal","isOpen","onClose","selectedProgram","_s","formData","setFormData","name","email","phone","message","showSuccess","setShowSuccess","showError","setShowError","handleChange","e","target","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","program","timestamp","Date","ok","setTimeout","Error","error","console","className","onClick","children","stopPropagation","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/John Lorenz/jbmmsi/client/src/components/Modal.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Modal = ({ isOpen, onClose, selectedProgram }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    message: ''\r\n  });\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n  const [showError, setShowError] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      // Updated API endpoint - now points to your backend server\r\n      const response = await fetch('http://localhost:3001/api/inquiries', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          ...formData,\r\n          program: selectedProgram,\r\n          timestamp: new Date()\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        setShowSuccess(true);\r\n        setShowError(false);\r\n        setFormData({ name: '', email: '', phone: '', message: '' });\r\n        \r\n        setTimeout(() => {\r\n          setShowSuccess(false);\r\n          onClose();\r\n        }, 2000);\r\n      } else {\r\n        throw new Error('Failed to save inquiry');\r\n      }\r\n    } catch (error) {\r\n      setShowError(true);\r\n      setShowSuccess(false);\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal active\" onClick={onClose}>\r\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n        {/* ... your existing modal JSX ... */}\r\n        <form onSubmit={handleSubmit}>\r\n          {/* ... your form fields ... */}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,KAAK,GAAGA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC;IACvCU,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACX,CAAC,CAAC;EACF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMkB,YAAY,GAAIC,CAAC,IAAK;IAC1BV,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACW,CAAC,CAACC,MAAM,CAACV,IAAI,GAAGS,CAAC,CAACC,MAAM,CAACC;IAC5B,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,CAAC,IAAK;IAChCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAElB,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QAClEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnB,GAAGtB,QAAQ;UACXuB,OAAO,EAAEzB,eAAe;UACxB0B,SAAS,EAAE,IAAIC,IAAI,CAAC;QACtB,CAAC;MACH,CAAC,CAAC;MAEF,IAAIT,QAAQ,CAACU,EAAE,EAAE;QACfnB,cAAc,CAAC,IAAI,CAAC;QACpBE,YAAY,CAAC,KAAK,CAAC;QACnBR,WAAW,CAAC;UAAEC,IAAI,EAAE,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,OAAO,EAAE;QAAG,CAAC,CAAC;QAE5DsB,UAAU,CAAC,MAAM;UACfpB,cAAc,CAAC,KAAK,CAAC;UACrBV,OAAO,CAAC,CAAC;QACX,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,MAAM;QACL,MAAM,IAAI+B,KAAK,CAAC,wBAAwB,CAAC;MAC3C;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdpB,YAAY,CAAC,IAAI,CAAC;MAClBF,cAAc,CAAC,KAAK,CAAC;MACrBuB,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAED,IAAI,CAACjC,MAAM,EAAE,OAAO,IAAI;EAExB,oBACEF,OAAA;IAAKqC,SAAS,EAAC,cAAc;IAACC,OAAO,EAAEnC,OAAQ;IAAAoC,QAAA,eAC7CvC,OAAA;MAAKqC,SAAS,EAAC,eAAe;MAACC,OAAO,EAAGrB,CAAC,IAAKA,CAAC,CAACuB,eAAe,CAAC,CAAE;MAAAD,QAAA,eAEjEvC,OAAA;QAAMyC,QAAQ,EAAErB;MAAa;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEvB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxC,EAAA,CAjEIJ,KAAK;AAAA6C,EAAA,GAAL7C,KAAK;AAmEX,eAAeA,KAAK;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}