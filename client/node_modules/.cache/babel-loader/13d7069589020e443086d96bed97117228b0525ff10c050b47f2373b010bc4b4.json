{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { useSocket } from './useSocket.js';\nexport const useSchools = () => {\n  _s();\n  const [schools, setSchools] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    socket,\n    isConnected\n  } = useSocket();\n  const hasFetched = useRef(false);\n  const API_BASE_URL = 'http://localhost:3001/api';\n  const fetchSchools = async () => {\n    if (hasFetched.current) return;\n    try {\n      setLoading(true);\n      hasFetched.current = true;\n      console.log('📡 Fetching schools...');\n      const response = await fetch(`${API_BASE_URL}/schools`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const result = await response.json();\n      if (result.success) {\n        console.log('✅ Schools loaded:', result.data.length);\n        setSchools(result.data);\n      } else {\n        throw new Error(result.message || 'Failed to fetch schools');\n      }\n    } catch (error) {\n      console.error('Error fetching schools:', error);\n      setError(error.message);\n      hasFetched.current = false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (!hasFetched.current) {\n      fetchSchools();\n    }\n  }, []);\n  useEffect(() => {\n    if (!socket || !isConnected) return;\n    console.log('🔌 Setting up school listeners...');\n    const handleNewSchool = newSchool => {\n      console.log('🏫 New school received:', newSchool);\n      setSchools(prev => [...prev, newSchool]);\n    };\n    const handleUpdatedSchool = updatedSchool => {\n      console.log('🏫 School updated:', updatedSchool);\n      setSchools(prev => prev.map(school => school._id === updatedSchool._id ? updatedSchool : school));\n    };\n    const handleDeletedSchool = data => {\n      console.log('🏫 School deleted:', data.id);\n      setSchools(prev => prev.filter(school => school._id !== data.id));\n    };\n    socket.on('school_created', handleNewSchool);\n    socket.on('school_updated', handleUpdatedSchool);\n    socket.on('school_deleted', handleDeletedSchool);\n    return () => {\n      if (socket) {\n        socket.off('school_created', handleNewSchool);\n        socket.off('school_updated', handleUpdatedSchool);\n        socket.off('school_deleted', handleDeletedSchool);\n      }\n    };\n  }, [socket, isConnected]);\n  const refetch = () => {\n    hasFetched.current = false;\n    fetchSchools();\n  };\n  return {\n    schools,\n    loading,\n    error,\n    fetchSchools: refetch,\n    isConnected\n  };\n};\n_s(useSchools, \"X8uqitvHtqILSHDhmukmsJs/OcY=\", false, function () {\n  return [useSocket];\n});","map":{"version":3,"names":["useState","useEffect","useRef","useSocket","useSchools","_s","schools","setSchools","loading","setLoading","error","setError","socket","isConnected","hasFetched","API_BASE_URL","fetchSchools","current","console","log","response","fetch","ok","Error","status","result","json","success","data","length","message","handleNewSchool","newSchool","prev","handleUpdatedSchool","updatedSchool","map","school","_id","handleDeletedSchool","id","filter","on","off","refetch"],"sources":["C:/jbmmsi/client/src/hooks/useSchools.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport { useSocket } from './useSocket.js';\r\n\r\nexport const useSchools = () => {\r\n  const [schools, setSchools] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const { socket, isConnected } = useSocket();\r\n  const hasFetched = useRef(false);\r\n\r\n  const API_BASE_URL = 'http://localhost:3001/api';\r\n\r\n  const fetchSchools = async () => {\r\n    if (hasFetched.current) return;\r\n    \r\n    try {\r\n      setLoading(true);\r\n      hasFetched.current = true;\r\n      \r\n      console.log('📡 Fetching schools...');\r\n      const response = await fetch(`${API_BASE_URL}/schools`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const result = await response.json();\r\n      \r\n      if (result.success) {\r\n        console.log('✅ Schools loaded:', result.data.length);\r\n        setSchools(result.data);\r\n      } else {\r\n        throw new Error(result.message || 'Failed to fetch schools');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching schools:', error);\r\n      setError(error.message);\r\n      hasFetched.current = false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!hasFetched.current) {\r\n      fetchSchools();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!socket || !isConnected) return;\r\n\r\n    console.log('🔌 Setting up school listeners...');\r\n\r\n    const handleNewSchool = (newSchool) => {\r\n      console.log('🏫 New school received:', newSchool);\r\n      setSchools(prev => [...prev, newSchool]);\r\n    };\r\n\r\n    const handleUpdatedSchool = (updatedSchool) => {\r\n      console.log('🏫 School updated:', updatedSchool);\r\n      setSchools(prev => \r\n        prev.map(school => \r\n          school._id === updatedSchool._id ? updatedSchool : school\r\n        )\r\n      );\r\n    };\r\n\r\n    const handleDeletedSchool = (data) => {\r\n      console.log('🏫 School deleted:', data.id);\r\n      setSchools(prev => \r\n        prev.filter(school => school._id !== data.id)\r\n      );\r\n    };\r\n\r\n    socket.on('school_created', handleNewSchool);\r\n    socket.on('school_updated', handleUpdatedSchool);\r\n    socket.on('school_deleted', handleDeletedSchool);\r\n\r\n    return () => {\r\n      if (socket) {\r\n        socket.off('school_created', handleNewSchool);\r\n        socket.off('school_updated', handleUpdatedSchool);\r\n        socket.off('school_deleted', handleDeletedSchool);\r\n      }\r\n    };\r\n  }, [socket, isConnected]);\r\n\r\n  const refetch = () => {\r\n    hasFetched.current = false;\r\n    fetchSchools();\r\n  };\r\n\r\n  return {\r\n    schools,\r\n    loading,\r\n    error,\r\n    fetchSchools: refetch,\r\n    isConnected\r\n  };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}