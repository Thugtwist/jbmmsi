{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useSocket } from './useSocket';\nexport const useAnnouncements = () => {\n  _s();\n  const [announcements, setAnnouncements] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const {\n    socket\n  } = useSocket();\n  const API_BASE_URL = 'http://localhost:3001/api';\n  const fetchAnnouncements = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(`${API_BASE_URL}/announcements`);\n      const result = await response.json();\n      if (result.success) {\n        setAnnouncements(result.data);\n      } else {\n        setError('Failed to load announcements');\n      }\n    } catch (error) {\n      console.error('Error fetching announcements:', error);\n      setError('Error loading announcements');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchAnnouncements();\n\n    // Set up real-time listeners\n    if (socket) {\n      const handleNewAnnouncement = newAnnouncement => {\n        console.log('游닉 New announcement received:', newAnnouncement);\n        setAnnouncements(prev => [newAnnouncement, ...prev]);\n      };\n      const handleUpdatedAnnouncement = updatedAnnouncement => {\n        console.log('游닉 Announcement updated:', updatedAnnouncement);\n        setAnnouncements(prev => prev.map(ann => ann._id === updatedAnnouncement._id ? updatedAnnouncement : ann));\n      };\n      const handleDeletedAnnouncement = data => {\n        console.log('游닉 Announcement deleted:', data.id);\n        setAnnouncements(prev => prev.filter(ann => ann._id !== data.id));\n      };\n      socket.on('announcement_created', handleNewAnnouncement);\n      socket.on('announcement_updated', handleUpdatedAnnouncement);\n      socket.on('announcement_deleted', handleDeletedAnnouncement);\n      return () => {\n        socket.off('announcement_created', handleNewAnnouncement);\n        socket.off('announcement_updated', handleUpdatedAnnouncement);\n        socket.off('announcement_deleted', handleDeletedAnnouncement);\n      };\n    }\n  }, [socket]);\n  return {\n    announcements,\n    loading,\n    error,\n    fetchAnnouncements\n  };\n};\n_s(useAnnouncements, \"KoPe2dHD8O/XiiJb/2X37vGhXJE=\", false, function () {\n  return [useSocket];\n});","map":{"version":3,"names":["useState","useEffect","useSocket","useAnnouncements","_s","announcements","setAnnouncements","loading","setLoading","error","setError","socket","API_BASE_URL","fetchAnnouncements","response","fetch","result","json","success","data","console","handleNewAnnouncement","newAnnouncement","log","prev","handleUpdatedAnnouncement","updatedAnnouncement","map","ann","_id","handleDeletedAnnouncement","id","filter","on","off"],"sources":["C:/jbmmsi/client/src/hooks/useAnnouncements.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useSocket } from './useSocket';\r\n\r\nexport const useAnnouncements = () => {\r\n  const [announcements, setAnnouncements] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const { socket } = useSocket();\r\n\r\n  const API_BASE_URL = 'http://localhost:3001/api';\r\n\r\n  const fetchAnnouncements = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch(`${API_BASE_URL}/announcements`);\r\n      const result = await response.json();\r\n      \r\n      if (result.success) {\r\n        setAnnouncements(result.data);\r\n      } else {\r\n        setError('Failed to load announcements');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching announcements:', error);\r\n      setError('Error loading announcements');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAnnouncements();\r\n\r\n    // Set up real-time listeners\r\n    if (socket) {\r\n      const handleNewAnnouncement = (newAnnouncement) => {\r\n        console.log('游닉 New announcement received:', newAnnouncement);\r\n        setAnnouncements(prev => [newAnnouncement, ...prev]);\r\n      };\r\n\r\n      const handleUpdatedAnnouncement = (updatedAnnouncement) => {\r\n        console.log('游닉 Announcement updated:', updatedAnnouncement);\r\n        setAnnouncements(prev => \r\n          prev.map(ann => \r\n            ann._id === updatedAnnouncement._id ? updatedAnnouncement : ann\r\n          )\r\n        );\r\n      };\r\n\r\n      const handleDeletedAnnouncement = (data) => {\r\n        console.log('游닉 Announcement deleted:', data.id);\r\n        setAnnouncements(prev => \r\n          prev.filter(ann => ann._id !== data.id)\r\n        );\r\n      };\r\n\r\n      socket.on('announcement_created', handleNewAnnouncement);\r\n      socket.on('announcement_updated', handleUpdatedAnnouncement);\r\n      socket.on('announcement_deleted', handleDeletedAnnouncement);\r\n\r\n      return () => {\r\n        socket.off('announcement_created', handleNewAnnouncement);\r\n        socket.off('announcement_updated', handleUpdatedAnnouncement);\r\n        socket.off('announcement_deleted', handleDeletedAnnouncement);\r\n      };\r\n    }\r\n  }, [socket]);\r\n\r\n  return {\r\n    announcements,\r\n    loading,\r\n    error,\r\n    fetchAnnouncements\r\n  };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}